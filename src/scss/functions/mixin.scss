/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);
  @if $index {
    $before: str-slice($string, 1, $index - 1);
    $after: str-slice($string, $index + str-length($search));
    @return #{$before}#{$replace}#{$after};
  }
  @return $string;
}



@mixin font-face($font-family, $file-path, $file-formats) {
  @each $font in $font-family {
    $font-name: str-replace($font, " ", "-");
    @font-face {
      font-family: '#{$font}';
      $sources: ();
      @each $format in $file-formats {
        $source: url('#{$file-path}/#{$font-name}.#{$format}') format('#{$format}');
        $sources: append($sources, $source, comma);
      }
      src: $sources;
      font-display: swap;
    }
  }
}









@mixin to-custom-properties($map) {
  @at-root :root {

    @each $key,
    $value in $map {
      --#{$key}: #{$value};
    }
  }
}